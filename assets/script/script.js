// Создадим сервис комментариев. В нём будет три поля ввода:

// поле для ввода имени. Сделайте интерфейс преобразования имени, который учтёт, все нюансы — лишние пробелы, отсутствие больших букв в имени и прочее. Например, было введено пользователем : иВаН . Стало: Иван .
// поле для ввода ссылки на аватар;
// поле ввода сообщения. Необходимо реализовать отображение и добавление сообщений, а также функцию checkSpam(str), заменяющую 'viagra' или 'XXX' на *** ;
// функция должна быть нечувствительна к регистру:
// const comment1 = checkSpam('buy ViAgRA now'); //результат buy *** now
// const comment2 = checkSpam('free xxx'); //результат free ***
// const comment3 = checkSpam("innocent rabbit") ; //результат innocent rabbit

// напротив аватара и имени должна появляться дата когда и во сколько был написан комментарий;
// под заголовком «Оставьте ваш комментарий» должен быть чекбокс, который даёт выбор показывать ваше имя в комментарии или нет;
// если пользователь не указал имя, то вместо имени должно появляться username ;
// если пользователь не ввел ссылку на аватар, то должна появляться стандартная аватарка. Стандартных аватаров должно быть больше пяти, они должны подставляться в рандомном порядке.


// Декомпозиция задания:

// ▎1. Определение структуры данных
// - Создать объект для хранения комментариев, содержащий:
//   - Имя пользователя
//   - Ссылка на аватар
//   - Сообщение
//   - Дата и время комментария

// ▎2. Интерфейс для ввода данных
// - Создать три поля ввода:
//   - Поле для ввода имени
//   - Поле для ввода ссылки на аватар
//   - Поле для ввода сообщения

// ▎3. Обработка имени
// - Реализовать функцию для преобразования имени:
//   - Удаление лишних пробелов
//   - Приведение первой буквы к верхнему регистру, остальные — к нижнему

// ▎4. Обработка сообщения
// - Реализовать функцию checkSpam(str):
//   - Замена слов "viagra" и "XXX" на "***"
//   - Игнорирование регистра при проверке на наличие запрещённых слов

// ▎5. Отображение комментариев
// - Создать функцию для отображения комментариев:
//   - Вывод имени (или "username", если имя не указано)
//   - Вывод аватара (или стандартного, если ссылка не указана)
//   - Вывод сообщения
//   - Вывод даты и времени комментария

// ▎6. Чекбокс для отображения имени
// - Реализовать чекбокс под заголовком «Оставьте ваш комментарий»:
//   - Если чекбокс не отмечен, имя не отображается в комментарии

// ▎7. Стандартные аватары
// - Создать массив стандартных аватаров (не менее пяти):
//   - Реализовать функцию, которая будет случайным образом выбирать аватар из массива, если пользователь не ввёл ссылку на свой аватар.

// ▎8. Интеграция всех компонентов
// - Связать все части вместе:
//   - Обработчик события при отправке комментария, который будет вызывать все вышеописанные функции и обновлять интерфейс.

// ▎9. Тестирование
// - Провести тестирование всех функций:
//   - Проверить обработку имени
//   - Проверить обработку сообщений на наличие спама
//   - Проверить отображение комментариев с разными вводами

// ▎10. Документация и комментарии
// - Написать документацию к коду и добавить комментарии для ясности.


function nameTransformations(name) {
  return name.trim().toLowerCase().replace(/\s+/g, ' ');
}

function checkSpam(str) {
  return str.replace(/viagra/gi, '***').replace(/xxx/gi, '***');
}

function addComment() {
  const usernameInput = document.getElementById('username');
  const linkInput = document.getElementById('link');
  const commentInput = document.getElementById('comment');
  const chat = document.getElementById('chat');
    
  const textComment = nameTransformations(usernameInput.value);
  chat.textContent = console.log('textComment')
  const avatar = linkInput.value;
  const commentText = checkSpam(commentInput.value);

  const commentСhat = document.createElement('div');
  commentСhat.classList.add('comment');

  // изменения страницы с помощью .innerHTML
  commentСhat.innerHTML = <img src="${linkInput}"></img>
}
const button = document.querySelector('.submit');
button.addEventListener('click', addComment);
addComment();